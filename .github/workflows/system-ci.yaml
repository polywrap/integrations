name: System-CI
on:
  push:
    branches:
      - main
      - dev
  pull_request:

jobs:
  System-CI:
    strategy:
      matrix:
        integration:
          - cache
          - client-threads
          - concurrent
          - datetime-plugin
          - logger
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      CI: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.13.1'
      - name: Install cue lang
        run: go install cuelang.org/go/cmd/cue@latest
      - name: Check if cue is installed
        run: cue version
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('./${{ matrix.integration }}/**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --cwd ./${{ matrix.integration }} install
      - name: Build
        run: yarn --cwd ./${{ matrix.integration }} build
      - name: Deploy
        run: yarn --cwd ./${{ matrix.integration }} deploy
      - name: Test
        run: yarn --cwd ./${{ matrix.integration }} test
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.integration }}-build-artifact
          path: ./${{ matrix.integration }}/wrapper/${{ matrix.language }}/build

  Apps-CI:
    strategy:
      matrix:
        demo:
          - simple-storage
          - hello-world
          - fetch-metadata
          - signer-provider
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      CI: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('./${{ matrix.demo }}/app/**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --cwd ./${{ matrix.demo }}/app install --nonInteractive --frozen-lockfile --prefer-offline
      - name: Build
        run: yarn --cwd ./${{ matrix.demo }}/app build
      - name: Test
        run: yarn --cwd ./${{ matrix.demo }}/app test
